// <auto-generated />
using System;
using ExpenseTrackerWebAPI_Mk2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTrackerWebAPI_Mk2.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Bank", b =>
                {
                    b.Property<Guid>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AccNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BankID");

                    b.HasIndex("AccNumber")
                        .IsUnique();

                    b.HasIndex("BankName")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("Banks");

                    b.HasData(
                        new
                        {
                            BankID = new Guid("795fcc24-1975-454c-86ac-0cc0db1e78c6"),
                            AccNumber = "122104569335",
                            Balance = 22381.200000000001,
                            BankName = "JP Morgan & Chase",
                            Status = false,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            BankID = new Guid("4d46c466-805b-4b9d-9dc3-a636ac913ee3"),
                            AccNumber = "117856353077",
                            Balance = 95555.5,
                            BankName = "Bank of America",
                            Status = false,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        });
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("CategoryID");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("f5186c55-332a-4eae-b917-7f5fae0b2a7b"),
                            CategoryName = "Entertainment",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CategoryName = "Travel",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CategoryName = "Clothing",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CategoryName = "Dining",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("8815ac70-1c20-4167-a045-964d819e195f"),
                            CategoryName = "Groceries",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("b72e8dc1-1bc0-4b1e-b086-e412ed4a9dc0"),
                            CategoryName = "Healthcare",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CategoryName = "Electronics",
                            Status = false
                        },
                        new
                        {
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CategoryName = "Shopping",
                            Status = false
                        });
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.CreditCard", b =>
                {
                    b.Property<Guid>("CreditCardID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CVC")
                        .HasColumnType("int");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CreditLimit")
                        .HasColumnType("float");

                    b.Property<DateTime>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("First4Digits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last4Digits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Network")
                        .HasColumnType("int");

                    b.Property<int>("PaymentDueIn")
                        .HasColumnType("int");

                    b.Property<string>("Second4Digits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatementGenDay")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Third4Digits")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CreditCardID");

                    b.HasIndex("UserID");

                    b.ToTable("CreditCards", t =>
                        {
                            t.HasCheckConstraint("CHK_PaymentDueIn", "PaymentDueIn <= 31 AND PaymentDueIn >=1");

                            t.HasCheckConstraint("CHK_StatementGenDay", "StatementGenDay <= 31 AND StatementGenDay >=1");
                        });

                    b.HasData(
                        new
                        {
                            CreditCardID = new Guid("75987053-7057-499b-bdf6-14ac41509853"),
                            BankName = "CitiBank",
                            CVC = 127,
                            CardHolderName = "Admin Nim",
                            CardName = "CitiBank 1 7 8 0",
                            CreditLimit = 15000.0,
                            ExpDate = new DateTime(2032, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            First4Digits = "3 5 1 2",
                            Last4Digits = "1 7 8 0",
                            Network = 3,
                            PaymentDueIn = 20,
                            Second4Digits = "0 0 3 2",
                            StatementGenDay = 16,
                            Status = false,
                            Third4Digits = "3 7 6 9",
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            BankName = "Bank of America",
                            CVC = 435,
                            CardHolderName = "Admin Nim",
                            CardName = "Card 1",
                            CreditLimit = 75000.0,
                            ExpDate = new DateTime(2030, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            First4Digits = "5 4 3 2",
                            Last4Digits = "6 6 4 2",
                            Network = 1,
                            PaymentDueIn = 20,
                            Second4Digits = "1 2 9 9",
                            StatementGenDay = 21,
                            Status = false,
                            Third4Digits = "0 5 9 1",
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            BankName = "JP Morgan & Chase",
                            CVC = 380,
                            CardHolderName = "Admin Nim",
                            CardName = "Card 2",
                            CreditLimit = 15000.0,
                            ExpDate = new DateTime(2028, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            First4Digits = "9 8 7 6",
                            Last4Digits = "5 3 1 2",
                            Network = 0,
                            PaymentDueIn = 25,
                            Second4Digits = "4 3 2 7",
                            StatementGenDay = 15,
                            Status = false,
                            Third4Digits = "9 7 5 2",
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        });
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Recipient", b =>
                {
                    b.Property<Guid>("RecipientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("RecipientID");

                    b.HasIndex("RecipientName")
                        .IsUnique();

                    b.ToTable("Recipients");

                    b.HasData(
                        new
                        {
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RecipientName = "H&M",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("3cfff9f1-d8b3-4396-a44f-622899681719"),
                            RecipientName = "Ralph Lauren",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("2b32e737-6637-47b2-b150-ca3af794d620"),
                            RecipientName = "Michael Kors",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("dc769f30-ba3c-4df8-8e9e-44d0f905dea6"),
                            RecipientName = "OLD NAVY",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("b7caea13-1d1a-4780-831a-ed973765c67a"),
                            RecipientName = "Gap Inc",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("04848095-f6d3-489e-bfd2-92b09e039019"),
                            RecipientName = "Burger King",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("5d47a329-4a2d-4676-b349-3d26958ff25d"),
                            RecipientName = "McDonald's",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("41f99a2a-3fed-4bec-bee2-465f46f933a5"),
                            RecipientName = "Chick-fil-A",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("6ecf6c47-660e-4871-a6fc-9c17167a3b5d"),
                            RecipientName = "Panda Express",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("1a45beda-0d80-4ddc-9ba7-c12da07e7ab7"),
                            RecipientName = "Insomnia Cookies",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("dea8e720-e79c-4fc3-81fd-201befa9f904"),
                            RecipientName = "Dunkin' Donuts",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("cd39920e-7b14-4043-be69-2ebab1a7cd3e"),
                            RecipientName = "Dutch Bros. Coffee",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RecipientName = "Amazon",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RecipientName = "Burlington",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("c7ee15e0-5480-4544-b2d6-094ba5134ac7"),
                            RecipientName = "Costco",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RecipientName = "Walmart",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("18884556-def7-499c-89df-09a8d95b62d0"),
                            RecipientName = "Target",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("1b5a7d64-2e25-48cd-8cd6-9587f6078ca5"),
                            RecipientName = "BestBuy",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("a53c4426-df1c-4325-8e52-4ea027a6e83e"),
                            RecipientName = "Kroger",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("dfb07eb1-81e9-4139-8419-ba545f0db07a"),
                            RecipientName = "H-E-B",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("3ebaa280-3ec4-4b68-aa21-f9b2fe2cbd63"),
                            RecipientName = "CVS",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("73f04239-ca28-47e1-9243-a8c888c06f4c"),
                            RecipientName = "American Airlines",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("7431dc59-2e5a-4863-a58b-05e17566e310"),
                            RecipientName = "Delta",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("03a5b5de-e9ec-4e70-94f2-00da5d667787"),
                            RecipientName = "United",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("df7269a9-6c65-434f-bcd5-d9853b0b75b3"),
                            RecipientName = "Air France",
                            Status = false
                        },
                        new
                        {
                            RecipientID = new Guid("4575e719-3887-413b-9b30-326cf11d27f7"),
                            RecipientName = "Southwest",
                            Status = false
                        });
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Transaction", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<Guid?>("BankID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreditCardID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentMode")
                        .HasColumnType("int");

                    b.Property<Guid>("RecipientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("RewardPoints")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("TransactionMode")
                        .HasColumnType("int");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TransactionID");

                    b.HasIndex("BankID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("CreditCardID");

                    b.HasIndex("RecipientID");

                    b.HasIndex("UserID");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            TransactionID = new Guid("dd04c84a-5807-43b2-88bb-17e19e96bfaf"),
                            Amount = 153.83000000000001,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2023, 11, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought winter wear - jackets, socks, shoes",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("f2da2972-b060-43c8-8039-6f36404ee06c"),
                            Amount = 800.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new smartphone for upgraded features",
                            PaymentMode = 1,
                            RecipientID = new Guid("1b5a7d64-2e25-48cd-8cd6-9587f6078ca5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("4254185d-498b-45f4-b26c-fcdc16e648f6"),
                            Amount = 799.99000000000001,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new smartphone for upgraded features",
                            PaymentMode = 1,
                            RecipientID = new Guid("1b5a7d64-2e25-48cd-8cd6-9587f6078ca5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("a821ce9f-e206-4c3e-be7e-5d502c777972"),
                            Amount = 60.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new jacket for the upcoming spring season",
                            PaymentMode = 1,
                            RecipientID = new Guid("dc769f30-ba3c-4df8-8e9e-44d0f905dea6"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("5c75c12b-3b90-4222-887c-001b9ae75163"),
                            Amount = 25.75,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Dined at Chick-fil-A for lunch",
                            PaymentMode = 1,
                            RecipientID = new Guid("41f99a2a-3fed-4bec-bee2-465f46f933a5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("49d48d35-39b6-409a-b2e1-2ae30c4db609"),
                            Amount = 100.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new pair of sneakers for daily wear",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("b55146f1-c05b-4a13-9e6f-1eb5d79b30ea"),
                            Amount = 8.4499999999999993,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought breakfast at Dunkin' Donuts",
                            PaymentMode = 1,
                            RecipientID = new Guid("dea8e720-e79c-4fc3-81fd-201befa9f904"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("e4701e3d-ce36-4662-b196-b93d7de08973"),
                            Amount = 80.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a portable speaker for outdoor gatherings",
                            PaymentMode = 1,
                            RecipientID = new Guid("18884556-def7-499c-89df-09a8d95b62d0"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("285249e4-db59-4e36-bc15-e3496feed924"),
                            Amount = 600.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Booked flights to Miami, USA for spring break",
                            PaymentMode = 1,
                            RecipientID = new Guid("73f04239-ca28-47e1-9243-a8c888c06f4c"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("3ffd8e08-d9a8-4676-abde-24639e728185"),
                            Amount = 50.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new dress for a spring outing",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("9d9f14d1-250e-40ed-8d42-02bb85fa72f6"),
                            Amount = 50.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Returned the new dress for a spring outing",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 0,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("c093e452-cdcc-4b7b-a498-1095b07df761"),
                            Amount = 14.25,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Grabbed lunch at McDonald's",
                            PaymentMode = 1,
                            RecipientID = new Guid("5d47a329-4a2d-4676-b349-3d26958ff25d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("e900ca8a-b60b-4c2e-8570-3bb42c6116dc"),
                            Amount = 17.5,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Enjoyed a meal at Panda Express for dinner",
                            PaymentMode = 1,
                            RecipientID = new Guid("6ecf6c47-660e-4871-a6fc-9c17167a3b5d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("60299a7b-25f1-4895-bbcf-0ebd697d0780"),
                            Amount = 60.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new dress for the upcoming summer season",
                            PaymentMode = 1,
                            RecipientID = new Guid("b7caea13-1d1a-4780-831a-ed973765c67a"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("1a0c6c5c-fcfd-499a-8346-c0b8cd1489c0"),
                            Amount = 300.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new smartwatch for fitness tracking and notifications",
                            PaymentMode = 1,
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("adf83f65-1f1b-4915-b034-cca4ed5e0ef6"),
                            Amount = 400.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new suit for upcoming business meetings",
                            PaymentMode = 1,
                            RecipientID = new Guid("3cfff9f1-d8b3-4396-a44f-622899681719"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("d41a1d2d-76e2-4577-aef0-a115183212a7"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Reserved flights to London, UK for a business conference",
                            PaymentMode = 1,
                            RecipientID = new Guid("7431dc59-2e5a-4863-a58b-05e17566e310"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("a2850307-d063-4227-b50f-b8996118ad21"),
                            Amount = 70.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought new jeans for casual wear",
                            PaymentMode = 1,
                            RecipientID = new Guid("b7caea13-1d1a-4780-831a-ed973765c67a"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("5f89f1e1-c265-42dc-b61b-f3947c179837"),
                            Amount = 21.5,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Dined at Chick-fil-A for dinner",
                            PaymentMode = 1,
                            RecipientID = new Guid("41f99a2a-3fed-4bec-bee2-465f46f933a5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("2088043a-475b-4a61-ab6d-4e00d7e566b3"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new laptop for work and entertainment",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("29f8a6d4-2ed1-4490-9e89-523bc3f67ec7"),
                            Amount = 1199.5,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new laptop for work and entertainment",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("d75ff396-45e7-4462-b0f1-d076444aad47"),
                            Amount = 103.83,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 4, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Pair of jeans and a couple of t-shirts",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("02f1bdff-80a5-41d1-be93-e14d97402742"),
                            Amount = 700.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new digital camera for photography hobby",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("f66a54e3-24d9-4842-9883-458afabc9f2a"),
                            Amount = 19.75,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Enjoyed lunch at Panda Express",
                            PaymentMode = 1,
                            RecipientID = new Guid("6ecf6c47-660e-4871-a6fc-9c17167a3b5d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("2f5dea5a-d1f8-4a05-8663-7c9376c0e216"),
                            Amount = 19.75,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Enjoyed lunch at Panda Express",
                            PaymentMode = 1,
                            RecipientID = new Guid("6ecf6c47-660e-4871-a6fc-9c17167a3b5d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("208da7f5-9bbf-4566-a3e2-253e6596cf63"),
                            Amount = 2500.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Booked tickets to Tokyo, Japan for vacation",
                            PaymentMode = 1,
                            RecipientID = new Guid("03a5b5de-e9ec-4e70-94f2-00da5d667787"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("481f0eae-1fc0-432b-b52e-cc93d69a62a6"),
                            Amount = 40.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new hoodie for chilly evenings",
                            PaymentMode = 1,
                            RecipientID = new Guid("dc769f30-ba3c-4df8-8e9e-44d0f905dea6"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("c8c934c9-1bf2-4285-bddc-6e8652dc8e72"),
                            Amount = 500.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new gaming console for leisure time",
                            PaymentMode = 1,
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("1d2bdc9d-f1cb-4e36-a285-1b32ed3ad6fd"),
                            Amount = 80.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought new shoes for everyday wear",
                            PaymentMode = 1,
                            RecipientID = new Guid("b7caea13-1d1a-4780-831a-ed973765c67a"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("df89eef9-4dc9-4e5b-a6ae-cb811a2d68fe"),
                            Amount = 12.35,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Grabbed lunch at Burger King",
                            PaymentMode = 1,
                            RecipientID = new Guid("04848095-f6d3-489e-bfd2-92b09e039019"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("892df5a2-b46a-4a63-be9c-e3db033eb86f"),
                            Amount = 9.9499999999999993,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought lunch at Burger King",
                            PaymentMode = 1,
                            RecipientID = new Guid("04848095-f6d3-489e-bfd2-92b09e039019"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("e8ceef1e-6412-43a4-ba41-17f5c57ba8fb"),
                            Amount = 30.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought new shorts for the upcoming summer season",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("b3c96fac-0a88-47fa-bebc-996a4cd3a39e"),
                            Amount = 120.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new winter coat for the next winter season",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("bab80281-36d2-4b1a-844d-0b4f555cd0bd"),
                            Amount = 15.17,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a Jacket",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("5abdc099-4bab-4351-9a0a-4448e3391339"),
                            Amount = 40.0,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a new swimsuit for the upcoming summer season",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("b7dcae9d-3f55-4ba9-ab33-855fcd44ad77"),
                            Amount = 33.460000000000001,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a pair of shoes",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("6e2f5b73-4d75-43a4-8a80-07c20544d154"),
                            Amount = 33.460000000000001,
                            CategoryID = new Guid("4d627443-1ae0-49e0-8bf9-b1ea4b8cd8e1"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Returned the shoes",
                            PaymentMode = 1,
                            RecipientID = new Guid("7bb90da3-fee4-4a5b-8679-5d820e90ac3d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 0,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("9fc18d82-1e91-44ed-b17d-5a90794b56d7"),
                            Amount = 522.33000000000004,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a PS5",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("bb4b5ae6-0992-42cd-99ee-0e4b6d354bca"),
                            Amount = 522.33000000000004,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new laptop",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("0321dcf8-9ddc-4b11-a880-9edbc71e977a"),
                            Amount = 522.33000000000004,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a PS5",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("cf6b8a50-cb07-4224-ab97-a81fc20a29ff"),
                            Amount = 150.75,
                            CategoryID = new Guid("8815ac70-1c20-4167-a045-964d819e195f"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Weekly grocery shopping at H-E-B",
                            PaymentMode = 1,
                            RecipientID = new Guid("dfb07eb1-81e9-4139-8419-ba545f0db07a"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("944f7c7f-5706-4673-acba-598111f44441"),
                            Amount = 120.5,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased groceries and household items",
                            PaymentMode = 1,
                            RecipientID = new Guid("18884556-def7-499c-89df-09a8d95b62d0"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("44a1cebe-267f-4699-8c49-91bdc8b8ddf0"),
                            Amount = 45.600000000000001,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Dinner at Chick-fil-A",
                            PaymentMode = 1,
                            RecipientID = new Guid("41f99a2a-3fed-4bec-bee2-465f46f933a5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("a7186dbd-fc28-44dc-91bf-dd30edb24535"),
                            Amount = 85.75,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought household items",
                            PaymentMode = 1,
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("f8ca31ee-bea6-4f45-a0a8-4c1f80329336"),
                            Amount = 22.5,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Lunch with friends",
                            PaymentMode = 1,
                            RecipientID = new Guid("41f99a2a-3fed-4bec-bee2-465f46f933a5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("d483fb6b-134d-400c-b03e-1c5f304b0aa0"),
                            Amount = 200.0,
                            CategoryID = new Guid("b72e8dc1-1bc0-4b1e-b086-e412ed4a9dc0"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Prescription refill at CVS",
                            PaymentMode = 1,
                            RecipientID = new Guid("3ebaa280-3ec4-4b68-aa21-f9b2fe2cbd63"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("8a564d1a-8a57-447c-a2ac-10f5316fdabf"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Flight tickets with Air France",
                            PaymentMode = 1,
                            RecipientID = new Guid("df7269a9-6c65-434f-bcd5-d9853b0b75b3"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("630f921a-49ae-4e03-b5fa-211649b1fe84"),
                            Amount = 350.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Flight ticket",
                            PaymentMode = 1,
                            RecipientID = new Guid("03a5b5de-e9ec-4e70-94f2-00da5d667787"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("67b7ce82-5aea-493c-81e8-00a7f14f228b"),
                            Amount = 350.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Flight ticket - Refund",
                            PaymentMode = 1,
                            RecipientID = new Guid("03a5b5de-e9ec-4e70-94f2-00da5d667787"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 0,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("866d56f8-f87a-4c5f-ad2a-7acb32fba09a"),
                            Amount = 320.5,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought electronics from Amazon",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("d0c989e3-07e0-423b-a547-af6b82ffed0e"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought new laptop",
                            PaymentMode = 1,
                            RecipientID = new Guid("1b5a7d64-2e25-48cd-8cd6-9587f6078ca5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("892d507a-dc0c-4efa-9ae2-353244834fe8"),
                            Amount = 65.25,
                            CategoryID = new Guid("8815ac70-1c20-4167-a045-964d819e195f"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Weekly groceries",
                            PaymentMode = 1,
                            RecipientID = new Guid("a53c4426-df1c-4325-8e52-4ea027a6e83e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("9e74a91f-450e-4280-a876-86aaa1e3c7b1"),
                            Amount = 75.200000000000003,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought new clothes",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("6ca5710b-fce0-4958-93cd-63beb582576e"),
                            Amount = 150.75,
                            CategoryID = new Guid("8815ac70-1c20-4167-a045-964d819e195f"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bulk shopping for the month",
                            PaymentMode = 1,
                            RecipientID = new Guid("c7ee15e0-5480-4544-b2d6-094ba5134ac7"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("4f657cbb-04f2-4c6c-8288-e05c6bf637e2"),
                            Amount = 95.0,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought household essentials",
                            PaymentMode = 1,
                            RecipientID = new Guid("18884556-def7-499c-89df-09a8d95b62d0"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("5552d052-f5f6-4544-b083-a2f71d594f46"),
                            Amount = 35.5,
                            CategoryID = new Guid("b72e8dc1-1bc0-4b1e-b086-e412ed4a9dc0"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Prescription",
                            PaymentMode = 1,
                            RecipientID = new Guid("3ebaa280-3ec4-4b68-aa21-f9b2fe2cbd63"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("666b5bea-cad5-4796-91ed-da3cba658148"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Booked flight tickets to Paris, France for summer vacation",
                            PaymentMode = 1,
                            RecipientID = new Guid("7431dc59-2e5a-4863-a58b-05e17566e310"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("f42dc138-78c5-487d-afee-90b6a0b22651"),
                            Amount = 2500.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Reserved flights to Tokyo, Japan for a cultural exploration trip",
                            PaymentMode = 1,
                            RecipientID = new Guid("03a5b5de-e9ec-4e70-94f2-00da5d667787"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("77c968f7-4077-4b39-b146-1819953df416"),
                            Amount = 400.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Booked tickets to Los Angeles, USA for a weekend getaway",
                            PaymentMode = 1,
                            RecipientID = new Guid("4575e719-3887-413b-9b30-326cf11d27f7"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("0ea1410b-e394-4f42-a622-ec8fe7b33c46"),
                            Amount = 1200.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a powerful laptop for work and gaming",
                            PaymentMode = 1,
                            RecipientID = new Guid("1b5a7d64-2e25-48cd-8cd6-9587f6078ca5"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("ac828fe5-632d-4d52-8917-c817338253e6"),
                            Amount = 800.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Upgraded to the latest smartphone model",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("cc218736-5271-43a3-9384-e21d3cd989d7"),
                            Amount = 500.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought the latest gaming console with accessories",
                            PaymentMode = 1,
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RewardPoints = 24.449999999999999,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("19e89b80-8561-49e0-b874-f49a305770da"),
                            Amount = 1500.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a large smart TV for the living room",
                            PaymentMode = 1,
                            RecipientID = new Guid("7ca7fcb7-5650-41ba-bcfa-41a1e428ed6e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("8f2d62f3-4a2c-42c2-be4d-bced4d26ed96"),
                            Amount = 70.0,
                            CategoryID = new Guid("8815ac70-1c20-4167-a045-964d819e195f"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Picked up groceries at Kroger.",
                            PaymentMode = 1,
                            RecipientID = new Guid("a53c4426-df1c-4325-8e52-4ea027a6e83e"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("6e86a8f7-87c5-4eb8-bc89-2acb5c03a03a"),
                            Amount = 180.0,
                            CategoryID = new Guid("a5c6d659-aaf2-495f-affc-015627059750"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought a new tablet at Walmart.",
                            PaymentMode = 1,
                            RecipientID = new Guid("1059d5f9-e4aa-4c06-8f35-e664b6215378"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("1db79274-33e6-4d7b-849c-44fcd745ebc7"),
                            Amount = 30.0,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Had dinner at Panda Express.",
                            PaymentMode = 1,
                            RecipientID = new Guid("6ecf6c47-660e-4871-a6fc-9c17167a3b5d"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("3cff4d4c-5d44-43b4-98c4-8f0a378b8d64"),
                            Amount = 60.0,
                            CategoryID = new Guid("43a9d80e-581d-4639-9bcd-e062e7ac7176"),
                            CreditCardID = new Guid("cd4e4392-2fe6-4000-8f7b-d4c3885a0f7d"),
                            Date = new DateTime(2024, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Bought some spring clothes at H&M.",
                            PaymentMode = 1,
                            RecipientID = new Guid("fec14558-524a-46a1-ab0e-f8acfaf9ab49"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("8f30a758-bb12-4e52-b73f-4f69c9b88c60"),
                            Amount = 25.0,
                            CategoryID = new Guid("9ad4ccf1-f72b-4fe2-9c76-e91cd01445d8"),
                            CreditCardID = new Guid("566863e0-cac1-427b-9f22-74519d3970d9"),
                            Date = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Enjoyed lunch at Burger King with friends.",
                            PaymentMode = 1,
                            RecipientID = new Guid("04848095-f6d3-489e-bfd2-92b09e039019"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        },
                        new
                        {
                            TransactionID = new Guid("7f8d6c5f-c0f8-4e8b-ac8c-75a5b67b5745"),
                            Amount = 250.0,
                            CategoryID = new Guid("a6d314d6-ab99-47f9-9b17-2c94f9f03086"),
                            CreditCardID = new Guid("75987053-7057-499b-bdf6-14ac41509853"),
                            Date = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GeneralComments = "Purchased a flight ticket to New York with Delta.",
                            PaymentMode = 1,
                            RecipientID = new Guid("7431dc59-2e5a-4863-a58b-05e17566e310"),
                            RewardPoints = 0.0,
                            Status = false,
                            TransactionMode = 1,
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73")
                        });
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("8daa3821-3685-4299-a172-4bbf18929a73"),
                            Email = "user@user.com",
                            FirstName = "User",
                            LastName = "Resu",
                            Password = "user1",
                            Status = false,
                            UserName = "user1"
                        },
                        new
                        {
                            UserID = new Guid("bd500ce6-dee1-4445-a214-410829db561b"),
                            Email = "john.reese@machine.com",
                            FirstName = "John",
                            LastName = "Reese",
                            Password = "john",
                            Status = false,
                            UserName = "John"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Bank", b =>
                {
                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.User", "User")
                        .WithMany("Banks")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.CreditCard", b =>
                {
                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Transaction", b =>
                {
                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.Bank", "Bank")
                        .WithMany("Transactions")
                        .HasForeignKey("BankID");

                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.CreditCard", "CreditCard")
                        .WithMany("Transactions")
                        .HasForeignKey("CreditCardID");

                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.Recipient", "Recipient")
                        .WithMany("Transactions")
                        .HasForeignKey("RecipientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTrackerWebAPI_Mk2.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Category");

                    b.Navigation("CreditCard");

                    b.Navigation("Recipient");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Bank", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Category", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.CreditCard", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.Recipient", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("ExpenseTrackerWebAPI_Mk2.Models.User", b =>
                {
                    b.Navigation("Banks");

                    b.Navigation("CreditCards");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
